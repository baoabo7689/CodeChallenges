The Matrix Challenge
You are given an N × N matrix in which every cell is colored black or white. Columns are numbered from 0 to N-1 (from left to right). This coloring is represented by a non-empty array of integers A. If the K-th number in the array is equal to X then the X lowest cells in the K-th column of the matrix are black. The rest of the cells in the K-th column are white. The task is to calculate the side length of the biggest black square (a square containing only black cells).

Write a function:

    function solution(A);

that, given an array of integers A of length N representing the coloring of the matrix, returns the side length of the biggest black square.

Examples:

1. Given A = [1, 2, 5, 3, 1, 3], the function should return 2. For example, the black square of side 2 contains the two lowest rows of the 1st and 2nd columns (counting from 0).

The picture describes the first example test [1, 2, 5, 3, 1, 3].

2. Given A = [3, 3, 3, 5, 4], the function should return 3. For example, the biggest black square has side 3 and contains the three lowest rows of the last three columns.

The picture describes the second example test [3, 3, 3, 5, 4].

3. Given A = [6, 5, 5, 6, 2, 2], the function should return 4. The biggest black square has side 4 and contains the four lowest rows of the first four columns.

The picture describes the third example test [6, 5, 5, 6, 2, 2].

Write an efficient algorithm for the following assumptions:

        N is an integer within the range [1..100,000];
        each element of array A is an integer within the range [1..N].

Copyright 2009–2021 by Codility Limited. All Rights Reserved. Unauthorized copying, publication or disclosure prohibited. 






======================================================================================================================================================


	
	
	
	
	
	
	
	
======================================================================================================================================================
function solution(A) {
    // write your code in JavaScript (Node.js 8.9.4)
	console.log(A);
    var N = A.length;
	var result = 1;
	
	var bef = [];
	bef[-1] = 0;	
	bef[0] = 0;	
	for(var i=1; i<N; i++) {
		var ai = A[i];
		if(ai == A[i-1]) {
			bef[i] = bef[i-1];
			continue;			
		}
				
		if(ai > A[i-1]) {
			bef[i] = i;
			continue;
		}
		
		for(j=i-1; j>=0 && A[j] > ai; j--);
		
		bef[i] = bef[j+1];
	}
	
	console.log(bef);	
	var aft = [];	
	aft[N] = N-1;	
	aft[N-1] = N-1;
	for(var i=N-2; i>=0; i--) {
		var ai = A[i];
		if(ai == A[i+1]) {
			aft[i] = aft[i+1];
			continue;				
		}
		
		if(ai > A[i+1]) {
			aft[i] = i;
			continue;			
		}
		
		for(j=i+1; j<N && A[j] > ai; j++);
		aft[i] = aft[j-1];
	}
	
	console.log(aft);
	for(var i=0; i<N; i++) {
		var wid = aft[i] - bef[i] + 1;
		var len = A[i];
		var r = Math.min(wid, len);
		result = Math.max(result, r);
	}
	
    return result;
}






7.
0.072 s
WRONG ANSWER, got 2 expected 3
stdout:

[ 1, 2, 3, 4, 3, 2, 1 ]
[ 0, 1, 2, 3, 3, 3, 3 ]
[ 3, 3, 3, 3, 4, 5, 6 ]



8.
0.072 s
WRONG ANSWER, got 2 expected 3
stdout:

[ 2, 2, 3, 5, 3, 2, 2 ]
[ 0, 0, 2, 3, 3, 3, 3 ]
[ 0, 3, 3, 3, 4, 5, 6 ]



4.
0.076 s
WRONG ANSWER, got 3 expected 4
stdout:

[ 4, 8, 10, 7, 5, 2, 6, 1, 9, 3 ]
[ 0, 1, 2, 2, 2, 2, 6, 6, 8, 8 ]
[ 2, 2, 2, 3, 4, 6, 6, 8, 8, 9 ]





































