This is a demo task.

Write a function:

    function solution(A);

that, given an array A of N integers, returns the smallest positive integer (greater than 0) that does not occur in A.

For example, given A = [1, 3, 6, 4, 1, 2], the function should return 5.

Given A = [1, 2, 3], the function should return 4.

Given A = [−1, −3], the function should return 1.

Assume that:

        N is an integer within the range [1..100,000];
        each element of array A is an integer within the range [−1,000,000..1,000,000].

Complexity:

        expected worst-case time complexity is O(N);
        expected worst-case space complexity is O(N) (not counting the storage required for input arguments).

Copyright 2009–2018 by Codility Limited. All Rights Reserved. Unauthorized copying, publication or disclosure prohibited. 
======================================================================================================================================================


function solution(A) {
		var N = A.length;
		
		var existed = [];
		var minA = undefined;
		
		for(var i=0; i<N; i++) {
			var a = A[i];
			if(a <= 0) {
				continue;
			}
			
			if(minA === undefined || a < minA) {
				minA = a;
			}
			
			existed[a] = true;		
		}		
		
		if(minA > 1) {
			return 1;
		}
		
		for(var i=1;; i++) {
			if(!existed[i]) {
				break;
			}
		}
		
		return i;
	}
	


















