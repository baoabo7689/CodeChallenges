Euler published the remarkable quadratic formula: 
It turns out that the formula will produce 40 primes for the consecutive values  to . However, when ,  is divisible by , and certainly when , is clearly divisible by .

Using computers, the incredible formula  was discovered, which produces  primes for the consecutive values  to . The product of the coefficients,  and , is .

Considering quadratics of the form:

where  is the modulus/absolute value of  
e.g.  and 

Find the coefficients,  and , for the quadratic expression that produces the maximum number of primes for consecutive values of , starting with .

Note For this challenge you can assume solution to be unique.

Input Format

The first line contains an integer .

Output Format

Print the value of  and  separated by space.

Constraints 

Sample Input

42
Sample Output

-1 41
Explanation

for  and , you get 42 primes.

======================================================================================================================================================
n*(n+a) + b 

n=0 => b prime
n=1 => b+1 + a prime => a lẻ


nếu b âm
-(n^2 + a*n + b) = n^2 + (-a)*n + (-b) prime 
=> xét b dương
n^2 + an + b 

a>b???
n = b => chọn a <= b




======================================================================================================================================================
using System;
using System.Collections.Generic;
using System.IO;
class Solution {
    static bool isPrime(int n) {
        n = Math.Abs(n);
        
        if(n==2) {
            return true;
        }
        
        for(var i=2; i<=Math.Sqrt(n); i++) {
            if(n%i == 0) {
                return false;
            }
        }
        
        return true;
    }
    
    static void Main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution */
        var N = int.Parse(Console.ReadLine());
        var rA = 0;
        var rB = 0;
        var maxLength = 0;
        
        for(var b = 0; b<=N; b++) {
            if(!isPrime(b)) {
                continue;
            }
            
            for(var a=-b; a<=N; a++) {
                if(!isPrime(a + b + 1)) {
                    continue;
                }
                
                var count = 0;
                while(isPrime(count*count + a*count + b)) {
                    count++;
                }
                
                if(count > maxLength) {
                    rA = a;
                    rB = b;
                    maxLength = count;
                }
            }
            
        }
        
        Console.WriteLine(rA + " " + rB);
    }
}






















