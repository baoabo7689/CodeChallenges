Consider two points, and . We consider the inversion or point reflection, , of point across point to be a rotation of point around .

Given sets of points and , find for each pair of points and print two space-separated integers denoting the respective values of and on a new line.

Input Format

The first line contains an integer, , denoting the number of sets of points.
Each of the subsequent lines contains four space-separated integers describing the respective values of , , , and defining points and .

Constraints

Output Format

For each pair of points and , print the corresponding respective values of and as two space-separated integers on a new line.

Sample Input

2
0 0 1 1
1 1 2 2

Sample Output

2 2
3 3

Explanation

The graphs below depict points , , and for the points given as Sample Input:

    find-point-0011.png
    Thus, we print and as 2 2 on a new line.
    find-point-1122.png
    Thus, we print and as 3 3 on a new line.


======================================================================================================================================================

q is middle [r,p]




======================================================================================================================================================
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

class Solution {

    /*
     * Complete the findPoint function below.
     */
    static int[] findPoint(int px, int py, int qx, int qy) {
        /*
         * Write your code here.
         */
        return new int[] { 2*qx - px, 2*qy - py };
    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int n = Convert.ToInt32(Console.ReadLine());

        for (int nItr = 0; nItr < n; nItr++) {
            string[] pxPyQxQy = Console.ReadLine().Split(' ');

            int px = Convert.ToInt32(pxPyQxQy[0]);

            int py = Convert.ToInt32(pxPyQxQy[1]);

            int qx = Convert.ToInt32(pxPyQxQy[2]);

            int qy = Convert.ToInt32(pxPyQxQy[3]);

            int[] result = findPoint(px, py, qx, qy);

            textWriter.WriteLine(string.Join(" ", result));
        }

        textWriter.Flush();
        textWriter.Close();
    }
}











