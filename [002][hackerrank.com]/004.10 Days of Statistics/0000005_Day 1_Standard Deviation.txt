Objective
In this challenge, we practice calculating standard deviation. Check out the Tutorial tab for learning materials and an instructional video!

Task
Given an array, , of integers, calculate and print the standard deviation. Your answer should be in decimal form, rounded to a scale of decimal place (i.e., format). An error margin of will be tolerated for the standard deviation.

Input Format

The first line contains an integer, , denoting the number of elements in the array.
The second line contains space-separated integers describing the respective elements of the array.

Constraints

    , where is the element of array .

Output Format

Print the standard deviation on a new line, rounded to a scale of decimal place (i.e., format).

Sample Input

5
10 40 30 50 20

Sample Output

14.1

Explanation

First, we find the mean:

Next, we calculate the squared distance from the mean, , for each :

Now we can compute , so:

Once rounded to a scale of decimal place, our result is .




======================================================================================================================================================



======================================================================================================================================================
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

class Solution {
    static void Main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution */
         var n = int.Parse(Console.ReadLine());
         var xs = Console.ReadLine().Split(' ').Select(v => int.Parse(v)).ToList();
         var mean = Mean(xs);
         Console.WriteLine(StandardDeviation(xs, mean).ToString("0.0"));
    }
    
    static double Mean(IEnumerable<int> arr) {
        return 1.0*arr.Sum() / arr.Count();
    }
    
    static double StandardDeviation(List<int> xs, double mean) {
        return Math.Sqrt((1.0 * xs.Sum(x => (x-mean)*(x-mean)) / xs.Count()));
    }
}



































