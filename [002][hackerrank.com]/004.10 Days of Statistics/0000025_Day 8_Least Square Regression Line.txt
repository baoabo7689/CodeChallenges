Objective 
In this challenge, we practice using linear regression techniques. Check out the Tutorial tab for learning materials!

Task 
A group of five students enrolls in Statistics immediately after taking a Math aptitude test. Each student's Math aptitude test score, , and Statistics course grade, , can be expressed as the following list of  points:

If a student scored an  on the Math aptitude test, what grade would we expect them to achieve in Statistics? Determine the equation of the best-fit line using the least squares method, then compute and print the value of  when .

Input Format

There are five lines of input; each line contains two space-separated integers describing a student's respective  and  grades:

95 85
85 95
80 70
70 65
60 70
If you do not wish to read this information from stdin, you can hard-code it into your program.

Output Format

Print a single line denoting the answer, rounded to a scale of  decimal places (i.e.,  format).




======================================================================================================================================================



======================================================================================================================================================
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

class Solution {
    static void Main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution */
        var X = new int[] { 95, 85, 80, 70, 60 };
        var Y = new int[] { 85, 95, 70, 65, 70 };
        var n = X.Length;
        
        var XY = 0;
        var sumX = 0;
        var sumY = 0;
        long sumX2 = 0;
        
        for(var i=0; i<X.Length; i++) {
            XY += X[i]*Y[i];
            sumX += X[i];
            sumY += Y[i];
            sumX2 += X[i]*X[i];
        }
        
        var b = (1.0*(n*XY - sumX*sumY)) / (n*sumX2 - sumX*sumX);
         
        
        var mX = (1.0*X.Sum())/n;
        var mY = (1.0*Y.Sum())/n;
        var a = mY - b*mX;
        var x = 80;
        Console.WriteLine((a + b*x).ToString("0.####"));        
    }
}






