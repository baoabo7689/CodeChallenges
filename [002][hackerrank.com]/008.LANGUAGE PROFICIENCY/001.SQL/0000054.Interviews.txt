Samantha interviews many candidates from different colleges using coding challenges and contests. Write a query to print the contest_id, hacker_id, name, and the sums of total_submissions, total_accepted_submissions, total_views, and total_unique_views for each contest sorted by contest_id. Exclude the contest from the result if all four sums are .

Note: A specific contest can be used to screen candidates at more than one college, but each college only holds  screening contest.

Input Format

The following tables hold interview data:

Contests: The contest_id is the id of the contest, hacker_id is the id of the hacker who created the contest, and name is the name of the hacker. 

Colleges: The college_id is the id of the college, and contest_id is the id of the contest that Samantha used to screen the candidates. 

Challenges: The challenge_id is the id of the challenge that belongs to one of the contests whose contest_id Samantha forgot, and college_id is the id of the college where the challenge was given to candidates. 

View_Stats: The challenge_id is the id of the challenge, total_views is the number of times the challenge was viewed by candidates, and total_unique_views is the number of times the challenge was viewed by unique candidates. 

Submission_Stats: The challenge_id is the id of the challenge, total_submissions is the number of submissions for the challenge, and total_accepted_submission is the number of submissions that achieved full scores. 

Sample Input

Contests Table:  Colleges Table:  Challenges Table:  View_Stats Table: Submission_Stats Table: 

Sample Output

66406 17973 Rose 111 39 156 56
66556 79153 Angela 0 0 11 10
94828 80275 Frank 150 38 41 15
Explanation

The contest  is used in the college . In this college , challenges  and  are asked, so from the view and submission stats:

Sum of total submissions 

Sum of total accepted submissions 

Sum of total views 

Sum of total unique views 

Similarly, we can find the sums for contests  and .


======================================================================================================================================================

and the sums of total_submissions, total_accepted_submissions, total_views, and total_unique_views

======================================================================================================================================================
/*
Enter your query here.
*/
Select cs1.contest_id, cs1.hacker_id, cs1.name, cs1.t1, cs1.t2, cv1.t3, cv1.t4
From (
    Select c1.contest_id, c1.hacker_id, c1.name, 
        Sum(s1.total_submissions) as t1, Sum(s1.total_accepted_submissions) as t2
    From Contests c1, Submission_Stats s1, Challenges chl1, Colleges cll1
    Where s1.challenge_id = chl1.challenge_id
    And chl1.college_id = cll1.college_id
    And cll1.contest_id = c1.contest_id
    Group By c1.contest_id, c1.hacker_id, c1.name
) cs1,
(
    Select c2.contest_id, c2.hacker_id, c2.name, 
        Sum(v1.total_views) as t3, Sum(v1.total_unique_views ) as t4
    From Contests c2, View_Stats v1, Challenges chl1, Colleges cll1
    Where v1.challenge_id = chl1.challenge_id
    And chl1.college_id = cll1.college_id
    And cll1.contest_id = c2.contest_id
    Group By c2.contest_id, c2.hacker_id, c2.name
) cv1
Where cs1.contest_id = cv1.contest_id
And cs1.t1 + cs1.t2 + cv1.t3 + cv1.t4 <> 0
Order By cs1.contest_id


















































