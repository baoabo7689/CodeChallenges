It's Halloween night! You and your friends are getting ready to go out in the streets to get as much candy as possible. You noticed that every year most of the night was wasted walking to the different streets, but this year will be different: you will be driving around the city for candy.

Unfortunately starting up the car and stopping will also take a lot of time and many police officers will be around the neighborhood to ensure everyone's safety, so you decide on the following plan:

    Once getting out of the car, you must visit at least n houses in a row (You could however start anywhere on the street).
    You will only get out of the car once per street.
    You can only visit k streets at most.

With the data you've acquired from the previous years, you and your friends know how much candy each house will give. This data is denoted by streets, where streets[i][j] represents the amount of candy given by the jth house on the ith street.

Your task is to find the total amount of candy you can get by visiting as many as k streets, stopping once to visit at least n houses in a row.

Example

    For streets = [[1,6,-50,9,0], [5,4,3,-3,2]], n = 3, and k = 1, the output should be speedingForCandy(streets, n, k) = 12.

    Here is the maximum amount of candy you can get in each street:
    https://i.imgur.com/nbVsNzq.png
    You and your friends are only visiting 1 street maximum, so you can ignore the first street, which will not be beneficial for the night.

    [execution time limit] 4 seconds (js)

    [input] array.array.integer streets

    An array of arrays of integers, where streets[i][j] represents how much candy will be given out by the jth house on the ith street.

    Guaranteed constraints:
    1 ≤ streets.length ≤ 500
    1 ≤ streets[i].length ≤ 500
    -100 ≤ streets[i][j] ≤ 100

    [input] integer n

    An integer denoting the minimum number of houses you must visit in a row.

    Guaranteed constraints:
    0 ≤ n ≤ streets[i].length

    [input] integer k

    An integer denoting the maximum number of streets you can trick-or-treat before the cops stop you.

    Guaranteed constraints:
    0 ≤ k ≤ streets.length

    [output] integer
        The maximum number of candy you can get from trick-or-treating.

[JavaScript (ES6)] Syntax Tips

// Prints help message to the console
// Returns a string
function helloWorld(name) {
    console.log("This prints to the console when you Run Tests");
    return "Hello, " + name;
}


======================================================================================================================================================
function speedingForCandy(streets, n, k) {
    var rows = [];
    for(var i=0; i<streets.length; i++) {
        var st = streets[i];
        var prefixSums = [];
        var s = 0;
        prefixSums[-1] = s;    
        for(var j=0; j<st.length; j++) {
            s += st[j];
            prefixSums[j] = s;            
        }
        
        
        var max = 0;
        for(var p=0; p<=st.length-n; p++) {
            for(var m=p+n-1; m<st.length; m++){
                max = Math.max(max, prefixSums[m] - prefixSums[p-1]);
                // console.log(max);  
            }
        }
                      
        rows[i] = max;
     }
    
    rows.sort(function(a, b){return a-b;});
    
    var r = 0;
    for(var i=0; i<k; i++) {
        r += rows[rows.length - 1 - i];
    }
    
    return r;
}












